---
title: "SPSS Files"
webr:
  packages: ['here', 'data.tree', 'haven']
---

```{r, include = FALSE}
knitr::opts_chunk$set(message = TRUE)
```

```{webr-r}
#| autorun: true
#| context: setup

dir.create("code")
dir.create("data")
dir.create("output")
dir.create("figures")

download.file("https://openstatprog.com/raw-data/boys.dat", "data/boys.dat")
download.file("https://openstatprog.com/raw-data/boys.RData", "data/boys.RData")
download.file("https://openstatprog.com/raw-data/boys_eu.csv", "data/boys_eu.csv")

download.file("https://openstatprog.com/raw-data/diabetes.txt", "data/diabetes.txt")
download.file("https://openstatprog.com/raw-data/diabetes.rds", "data/diabetes.rds")

download.file("https://openstatprog.com/raw-data/diabetes.txt", "data/iris.txt")
download.file("https://openstatprog.com/raw-data/diabetes.txt", "data/iris.csv")

download.file("https://openstatprog.com/raw-data/titanic.rds", "data/titanic.rds")
download.file("https://openstatprog.com/raw-data/utmb_2017.csv", "data/utmb_2017.csv")
download.file("https://openstatprog.com/raw-data/mtcars.sav", "data/mtcars.sav")
download.file("https://openstatprog.com/raw-data/starwars.sav", "data/starwars.sav")
download.file("https://openstatprog.com/raw-data/example_data.xlsx", "data/example_data.xlsx")

files    <- list.files("./", recursive = TRUE, include.dirs = TRUE, full.names = TRUE)
dir_tree <- data.tree::as.Node(data.frame(pathString = files))
```

The `haven` package, part of the tidyverse, provides a function called `read_spss()` that reads `.sav` files and returns
a tibble (a special dataset type typical of the tidyverse), while preserving important metadata like variable labels and
value labels.

```{r}
library(haven)

dataDir <- "data"

mtcars1 <- read_spss(here::here(dataDir, "mtcars.sav"))
```

We can inspect the metadata using `attributes()`:

```{r}
attributes(mtcars1)
```

One feature of `haven` is that it stores labeled SPSS variables as labelled vectors, preserving both the numeric code
and its corresponding label. For example:

```{r}
mtcars1$am
attributes(mtcars1$am)
```

To remove value labels (but retain variable labels), we use `labelled::unlabelled()`:

```{r}
library(labelled)

mtcars2 <- unlabelled(mtcars1)
```

We can view the value labels with:

```{r}
val_labels(mtcars1)
val_labels(mtcars2)
```

And to inspect the label for a specific variable:

```{r}
var_label(mtcars2)
```

::: {.callout-note}

Note: The `labelled` package provides a suite of utilities to manipulate SPSS-style metadata, including the ability to
convert labelled variables, set or remove labels, and prepare data for export back to SPSS or other systems.

:::

::: practice

## Practice

Use the `haven::read_spss()` function to load the SPSS dataset saved as "./data/starwars.sav".

:::: {.panel-tabset}
## {{< var tab_title.editor >}}

```{webr-r}
```

## {{< var tab_title.dir >}}

The following dendrogram illustrates the structure of the working directory for this *webr* session.

```{webr-r}
#| autorun: true
#| context: output

print(dir_tree)
```

## {{< var tab_title.solution >}}

```{r}
starwars <- read_spss(here::here("data", "starwars.sav"))
head(starwars)
```
::::

:::

